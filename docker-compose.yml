version: "3.7"

services:
  build-cloud-image:
    build:
      context: .
      dockerfile: build/cloud/Dockerfile
    image: cloud

  customer-read-api:
    build:
      args:
        service: customer-read-api
      context: build/service
    depends_on:
      - build-cloud-image
      - mongo
    env_file:
      - configs/customer-database.env
    image: customer-read-api

  customer-worker:
    build:
      args:
        service: customer-worker
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
      - mongo
    env_file:
      - configs/kafka.env
      - configs/customer-database.env
    environment:
      - KAFKA_GROUP_ID=customer-worker
    image: customer-worker
    restart: on-failure

  customer-write-api:
    build:
      args:
        service: customer-write-api
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
    env_file:
      - configs/kafka.env
    image: customer-write-api

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  gateway:
    build:
      args:
        service: gateway
      context: build/service
    depends_on:
      - build-cloud-image
      - customer-read-api
      - customer-write-api
      - order-read-api
      - order-write-api
      - product-read-api
      - product-write-api
      - search-api
    environment:
      - CUSTOMER_READ_API_URL=http://customer-read-api:8080
      - CUSTOMER_WRITE_API_URL=http://customer-write-api:8080
      - ORDER_READ_API_URL=http://order-read-api:8080
      - ORDER_WRITE_API_URL=http://order-write-api:8080
      - PRODUCT_READ_API_URL=http://product-read-api:8080
      - PRODUCT_WRITE_API_URL=http://product-write-api:8080
      - SEARCH_API_URL=http://search-api:8080
    image: gateway
    ports:
      - 8080:8080

  kafka:
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_METADATA_MAX_AGE_MS=500
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    image: bitnami/kafka:2
    volumes:
      - "kafka-data:/bitnami"

  load-generator:
    build:
      args:
        service: load-generator
      context: build/service
    depends_on:
      - build-cloud-image
      - customer-write-api
      - product-write-api
    environment:
      - CUSTOMER_WRITE_API_URL=http://customer-write-api:8080
      - ORDER_WRITE_API_URL=http://order-write-api:8080
      - PRODUCT_WRITE_API_URL=http://product-write-api:8080
    image: load-generator

  mongo:
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    image: mongo:4.0

  mongo-express:
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
    image: mongo-express
    ports:
      - 8081:8081

  order-read-api:
    build:
      args:
        service: order-read-api
      context: build/service
    depends_on:
      - build-cloud-image
      - mongo
    env_file:
      - configs/order-database.env
    image: order-read-api

  order-worker:
    build:
      args:
        service: order-worker
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
      - mongo
    env_file:
      - configs/kafka.env
      - configs/order-database.env
    environment:
      - KAFKA_GROUP_ID=order-worker
    image: order-worker
    restart: on-failure

  order-write-api:
    build:
      args:
        service: order-write-api
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
    env_file:
      - configs/kafka.env
    image: order-write-api

  product-read-api:
    build:
      args:
        service: product-read-api
      context: build/service
    depends_on:
      - build-cloud-image
      - mongo
    env_file:
      - configs/product-database.env
    image: product-read-api

  product-worker:
    build:
      args:
        service: product-worker
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
      - mongo
    env_file:
      - configs/kafka.env
      - configs/product-database.env
    environment:
      - KAFKA_GROUP_ID=product-worker
    image: product-worker
    restart: on-failure

  product-write-api:
    build:
      args:
        service: product-write-api
      context: build/service
    depends_on:
      - build-cloud-image
      - kafka
    env_file:
      - configs/kafka.env
    image: product-write-api

  search-api:
    build:
      args:
        service: search-api
      context: build/service
    depends_on:
      - elasticsearch
    env_file:
      - configs/elasticsearch.env
    image: search-api
    restart: on-failure

  search-worker:
    build:
      args:
        service: search-worker
      context: build/service
    depends_on:
      - elasticsearch
      - kafka
    env_file:
      - configs/elasticsearch.env
      - configs/kafka.env
    environment:
      - KAFKA_GROUP_ID=search-worker
    image: search-worker
    restart: on-failure

  zookeeper:
    image: bitnami/zookeeper:3
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  elasticsearch-data:
    driver: local

  kafka-data:
    driver: local

  zookeeper-data:
    driver: local
